unit ContasPagar;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.ExtCtrls,
  Vcl.ComCtrls, Vcl.Grids, Vcl.DBGrids, Vcl.Buttons;

type
  TFrmContasapagar = class(TForm)
    BtnExcluir: TSpeedButton;
    btnSalvar: TSpeedButton;
    btnNovo: TSpeedButton;
    Label1: TLabel;
    Label2: TLabel;
    Label5: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    grid: TDBGrid;
    dataInicial: TDateTimePicker;
    dataFinal: TDateTimePicker;
    cbforn: TComboBox;
    rbemissao: TRadioButton;
    rbvencimento: TRadioButton;
    Panel1: TPanel;
    Edtcodforn: TEdit;
    Panel2: TPanel;
    Label6: TLabel;
  private
    { Private declarations }

    procedure buscardata;
  public
    { Public declarations }
  end;

var
  FrmContasapagar: TFrmContasapagar;

implementation

{$R *.dfm}

uses Modulo;



{ TFrmContasapagar }

procedure TFrmContasapagar.buscardata;
begin


 dm.query_contas_a_pagar.Close;
 dm.query_contas_a_pagar.SQL.Clear;
  if Edtcodforn.Text <> '' then
    begin
      if rbemissao.Checked = true then
        begin
         dm.query_contas_a_pagar.SQL.Add('select * from contas_a_pagar where data_cad >= :dataInicial and data_cad <= :dataFinal and situacao = :situacao and id_fornecedor = :id_fornecedor order by id desc') ;
         dm.query_contas_a_pagar.ParamByName('situacao').Value :=  cbforn.Text;
         dm.query_contas_a_pagar.ParamByName('id_fornecedor').Value := Edtcodforn.Text;
          end
          else
          begin
           dm.query_contas_a_pagar.SQL.Add('select * from contas_a_pagar where data_venc >= :dataInicial and data_venc <= :dataFinal and situacao = :situacao and id_fornecedor = :id_fornecedor order by id desc') ;
           dm.query_contas_a_pagar.ParamByName('situacao').Value :=  cbforn.Text;
           dm.query_contas_a_pagar.ParamByName('id_fornecedor').Value := Edtcodforn.Text;
        end;


        dm.query_contas_a_pagar.ParamByName('dataInicial').Value :=  FormatDateTime('yyyy/mm/dd', dataInicial.Date);
        dm.query_contas_a_pagar.ParamByName('dataFinal').Value :=  FormatDateTime('yyyy/mm/dd', dataFinal.Date);
        dm.query_contas_a_pagar.Open;
    end
    else
    begin
        if rbemissao.Checked = true then
          begin
           dm.query_contas_a_pagar.SQL.Add('select * from contas_a_pagar where data_cad >= :dataInicial and data_cad <= :dataFinal and situacao = :situacao order by id desc') ;
           dm.query_contas_a_pagar.ParamByName('situacao').Value :=  cbforn.Text;
            end
            else
            begin
             dm.query_contas_a_pagar.SQL.Add('select * from contas_a_pagar where data_venc >= :dataInicial and data_venc <= :dataFinal and situacao = :situacao order by id desc') ;
             dm.query_contas_a_pagar.ParamByName('situacao').Value :=  cbforn.Text;
          end;


          dm.query_contas_a_pagar.ParamByName('dataInicial').Value :=  FormatDateTime('yyyy/mm/dd', dataInicial.Date);
          dm.query_contas_a_pagar.ParamByName('dataFinal').Value :=  FormatDateTime('yyyy/mm/dd', dataFinal.Date);
          dm.query_contas_a_pagar.Open;
    end

end;

end.
